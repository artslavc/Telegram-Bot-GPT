import telebot
from telebot import types
import threading

from g4f_engine import *

import asyncio
asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

bot = telebot.TeleBot('TOKEN')

style = '–ü–æ–¥—Ä–æ—Å—Ç–æ–∫'

@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, "üçï –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è, —á—Ç–æ —É–≥–æ–¥–Ω–æ!\n"
                                      f"–¢–µ–∫—É—â–∏–π –°—Ç–∏–ª—å: {style}")

@bot.message_handler(commands=['image'])
def handle_start(message):
    bot.send_message(message.chat.id, "üìå –ö–∞–∫–æ–µ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å?")
    bot.register_next_step_handler(message, image_generation)


def image_generation(message):
    editable_message = bot.send_message(message.chat.id, "üí§ –ù–µ–π—Ä–æ—Å–µ—Ç—å –î–µ–ª–∞–µ—Ç –ö–∞—Ä—Ç–∏–Ω–∫—É...")
    img_url = image_zapros(message.text)
    bot.edit_message_text('ü•• –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É: ' + img_url, message.chat.id, editable_message.message_id)


@bot.message_handler(commands=['chat'])
def chat_command(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton(text="üçî –ü–æ–¥—Ä–æ—Å—Ç–æ–∫")
    btn2 = telebot.types.KeyboardButton(text="ü§¨ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π")
    btn3 = telebot.types.KeyboardButton(text="üí£ –ó–µ–∫")
    markup.add(btn1, btn2, btn3)

    bot.send_message(message.chat.id, "üçø –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:", reply_markup=markup)

    bot.register_next_step_handler(message, choose_style)


def choose_style(message):
    choosed_style = message.text.split()[1]
    markup = types.ReplyKeyboardRemove()

    global style

    if choosed_style == style:
        bot.send_message(message.chat.id, 'üì´ –£ –≤–∞—Å —É–∂–µ –≤—ã–±—Ä–∞–Ω —ç—Ç–æ—Ç —Å—Ç–∏–ª—å!', reply_markup=markup)
    elif choosed_style == '–ü–æ–¥—Ä–æ—Å—Ç–æ–∫':
        style = '–ü–æ–¥—Ä–æ—Å—Ç–æ–∫'
        bot.send_message(message.chat.id, 'üé® –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –°—Ç–∏–ª—å: ' + style, reply_markup=markup)
    elif choosed_style == '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π':
        style = '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π'
        bot.send_message(message.chat.id, 'üé® –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –°—Ç–∏–ª—å: ' + style, reply_markup=markup)
    elif choosed_style == '–ó–µ–∫':
        style = '–ó–µ–∫'
        bot.send_message(message.chat.id, 'üé® –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –°—Ç–∏–ª—å: ' + style, reply_markup=markup)
    else:
        bot.send_message(message.chat.id, 'üö´ –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –°—Ç–∏–ª—è!')


@bot.message_handler(content_types=["text"])
def give_zapros(message):
    global style

    if message.text != '/start' and message.text != '/chat' and message.text != '/image':
        editable_message = bot.send_message(message.chat.id, "üí§ –ù–µ–π—Ä–æ—Å–µ—Ç—å –ó–∞–¥—É–º–∞–ª–∞—Å—å...")

        def thread_function():
            neiro_text = neiro_zapros(message.text, style)
            bot.edit_message_text(neiro_text, message.chat.id, editable_message.message_id)

        thread = threading.Thread(target=thread_function)
        thread.start()

bot.polling()
